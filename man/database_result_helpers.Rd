% Generated by hand to match roxygen2 output
\name{insert_power_results_batch}
\alias{insert_power_results_batch}
\alias{insert_estimation_results_batch}
\title{Insert batched simulation results}
\description{
Persist batches of simulation outputs for a single parameter configuration.
}
\usage{
insert_power_results_batch(con, param_id, p_val_matrix, replicate_start = 1)

insert_estimation_results_batch(
  con,
  param_id,
  estimation_id,
  theta_hat_matrix,
  target_loss_matrix,
  null_loss_matrix,
  replicate_start = 1
)
}
\arguments{
  \item{con}{A \code{\linkS4class{DBIConnection}}.}
  \item{param_id}{Integer identifier returned by
  \code{get_or_insert_power_param_id()} or
  \code{get_or_insert_estimation_param_id()}.}
  \item{p_val_matrix}{Numeric matrix containing p-values with one row per
  simulation replicate.}
  \item{replicate_start}{Integer index of the first replicate represented in
  the provided data.}
  \item{estimation_id}{Integer identifier returned by
  \code{get_or_insert_estimation_settings_id()}.}
  \item{theta_hat_matrix}{Numeric matrix of theta-hat estimates.}
  \item{target_loss_matrix}{Numeric matrix of target losses.}
  \item{null_loss_matrix}{Numeric matrix of null model losses.}
}
\value{
Invisibly returns \code{NULL}. The helpers are called for their side effects.
}
\examples{
\dontrun{
con <- DBI::dbConnect(RSQLite::SQLite(), tempfile(fileext = ".sqlite"))
create_power_database_schema(con)
param_id <- get_or_insert_power_param_id(
  con, n = 10, p = 20, lambda = Inf, test_type = "AS_SW_plugin",
  GLM_model = "logistic", model_specification = "well_specified"
)
insert_power_results_batch(con, param_id, matrix(runif(6), ncol = 3))
DBI::dbDisconnect(con)
}
}
