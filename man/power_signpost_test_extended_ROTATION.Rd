% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulationFunctions.R
\name{power_signpost_test_extended_ROTATION}
\alias{power_signpost_test_extended_ROTATION}
\title{Extended power analysis for rotation test}
\usage{
power_signpost_test_extended_ROTATION(
  n,
  p,
  model,
  B_power,
  B_theta_null,
  lambda = Inf,
  gammas = seq(0, 0.5, by = 0.1),
  verbose = TRUE,
  seed = NULL,
  n_cores = 8,
  n_beta = NULL,
  lambda_beta = NULL,
  estimate_beta = FALSE,
  lambda_est = lambda_est
)
}
\arguments{
\item{n}{Positive integer, sample size.}

\item{p}{Positive integer, dimension.}

\item{model}{Character, specifying one of "linear", "logistic", or "poisson".}

\item{B_power}{Positive integer, the number of p-values per gamma per generated design X.}

\item{B_theta_null}{Positive integer, the size of the null distribution (per test).}

\item{lambda}{Positive numeric, the ridge penalty parameter. Use Inf for infinite lambda.}

\item{gammas}{Optional numeric vector of gamma values. Defaults to seq(0, 0.5, by = 0.1).}

\item{verbose}{Logical, if TRUE displays a progress bar. Default is FALSE.}

\item{seed}{Optional integer. If provided, sets the seed for reproducibility.}

\item{n_cores}{Optional integer, number of cores for parallel programming.}

\item{n_beta}{Positive integer, sample size to estimate beta_0 and beta_a.}

\item{lambda_beta}{Positive numeric, regular ridge penalty parameter when estimating beta_0 and beta_a.}

\item{estimate_beta}{Logical, if TRUE beta_0 and beta_a are estimated; if FALSE, true values are used.}

\item{lambda_est}{Numeric, regularization parameter for loss estimation}
}
\value{
List containing:
\item{p_values}{Matrix of p-values}
\item{theta_hats}{Matrix of theta estimates}
\item{theta_hat_loss}{Matrix of losses using theta_hat}
\item{theta_null_loss}{Matrix of losses using theta=0}
}
\description{
Extended power analysis for rotation test
}
